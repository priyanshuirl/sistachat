{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","href","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","autocomplete","type","disabled","props","messageClass","src","alt","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAWAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAuB3B,SAASC,IAOP,OACE,sBAAKC,UAAU,QAAf,UACE,oBAAIA,UAAU,YAAd,kCACA,8HACA,wBAAQA,UAAU,UAAUC,QATP,WACvB,IAAMC,EAAW,IAAId,IAASS,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAOnB,kCACA,yCAAW,mBAAGG,KAAM,4CAAT,SAAsD,4DAMvE,SAASC,IACP,OAAOT,EAAKU,aACV,wBAAQP,UAAU,WAAWC,QAAS,kBAAMJ,EAAKW,WAAjD,yBAKJ,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAcd,EAAUe,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAP,oBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAEQ7B,EAAKU,YAAvBoB,EAFU,EAEVA,IAAKC,EAFK,EAELA,SAFK,SAIZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW3C,IAASU,UAAUkC,WAAWC,kBACzCN,MACAC,aARgB,OAWlBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAZvB,2CAAH,sDAejB,OAAQ,qCACN,iCAEGjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,sBAAMC,IAAKhC,OAIb,uBAAMiC,SAAUpB,EAAhB,UAEE,uBAAOqB,MAAOvB,EAAWoB,GAAG,QAAQI,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,QAAQG,YAAY,uBAAuBC,aAAa,QAEnI,wBAAQC,KAAK,SAASR,GAAG,SAASS,UAAW7B,EAA7C,wBAON,SAASkB,EAAYY,GACnB,MAAgCA,EAAMX,QAA9BV,EAAR,EAAQA,KAAMH,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SAEbwB,EAAezB,IAAQ9B,EAAKU,YAAYoB,IAAM,OAAS,WAE7D,OAAQ,mCACN,sBAAK3B,UAAS,kBAAaoD,GAA3B,UACE,qBAAKC,IAAKzB,GAAY,wDAAyD0B,IAAI,KACnF,4BAAIxB,SAMKyB,MAxGf,WAEE,MAAeC,YAAa3D,GAArB4D,EAAP,oBAEA,OACE,sBAAKzD,UAAU,MAAf,UACE,mCACE,2CACA,yCAAW,mBAAGK,KAAM,4CAAT,SAAsD,sDACjE,cAACC,EAAD,OAGF,kCACGmD,EAAO,cAAChD,EAAD,IAAe,cAACV,EAAD,UC1BhB2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.265e577e.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './App.css';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyAnwCas3WWmywhJQ7_tCrADvC_hHOPQP6Q\",\r\n  authDomain: \"sistachat-edd3e.firebaseapp.com\",\r\n  projectId: \"sistachat-edd3e\",\r\n  storageBucket: \"sistachat-edd3e.appspot.com\",\r\n  messagingSenderId: \"264187157963\",\r\n  appId: \"1:264187157963:web:6e191eaf1c3633e7a1ea4e\",\r\n  measurementId: \"G-7XK5127ZXV\"\r\n})\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\n\r\nfunction App() {\r\n\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>sistachat</h1>\r\n        <p>Made By <a href={\"https://www.linkedin.com/in/priyanshuirl/\"}><b>Priyanshu Mishra</b></a></p>\r\n        <SignOut />\r\n      </header>\r\n\r\n      <section>\r\n        {user ? <ChatRoom /> : <SignIn />}\r\n      </section>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SignIn() {\r\n\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  }\r\n\r\n  return (\r\n    <div className=\"intro\">\r\n      <h1 className=\"introhead\">Welcome to sistachat</h1>\r\n      <p>A place for you to discuss your Experiences, Ideas, Problems and Solutions with other people.</p>\r\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Continue with Google</button>\r\n      <p>Made By <a href={\"https://www.linkedin.com/in/priyanshuirl/\"}><b>Priyanshu&nbsp;Mishra</b></a></p>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign&nbsp;Out</button>\r\n  )\r\n}\r\n\r\n\r\nfunction ChatRoom() {\r\n  const dummy = useRef();\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limit(25);\r\n\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    })\r\n\r\n    setFormValue('');\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  return (<>\r\n    <main>\r\n\r\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n\r\n      <span ref={dummy}></span>\r\n\r\n    </main>\r\n\r\n    <form onSubmit={sendMessage} >\r\n\r\n      <input value={formValue} id=\"input\" onChange={(e) => setFormValue(e.target.value)} placeholder=\"Type your message...\" autocomplete=\"off\" />\r\n\r\n      <button type=\"submit\" id=\"button\" disabled={!formValue}>Send</button>\r\n\r\n    </form>\r\n  </>)\r\n}\r\n\r\n\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (<>\r\n    <div className={`message ${messageClass}`}>\r\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt='' />\r\n      <p>{text}</p>\r\n    </div>\r\n  </>)\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}